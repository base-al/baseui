<div class="container mx-auto">
    <h1 class="text-3xl font-bold mb-4">{{.PluralName}} Management</h1>

    <button id="create-{{.RouteName}}-btn" class="btn btn-primary mb-4">Create New {{.StructName}}</button>

    <div class="overflow-x-auto">
        <table class="table w-full">
            <thead>
                <tr>
                    <th>ID</th>
                    {{range .Fields}}
                    <th>{{.Name}}</th>
                    {{end}}
                    <th>Created At</th>
                    <th>Updated At</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody id="{{.RouteName}}-table-body">
                <!-- {{.PluralName}} will be loaded here -->
            </tbody>
        </table>
    </div>
</div>

<!-- Create {{.StructName}} Modal -->
<dialog id="create-modal" class="modal">
    <div class="modal-box">
        <h3 class="font-bold text-lg">Create New {{.StructName}}</h3>
        <form id="createForm">
            {{range .Fields}}
            <div class="form-control">
                <label class="label" for="create-{{.JSONName}}">
                    <span class="label-text">{{.Name}}</span>
                </label>
                <input type="{{getInputType .Type}}" id="create-{{.JSONName}}" name="{{.JSONName}}" class="input input-bordered" required>
            </div>
            {{end}}
            <div class="modal-action">
                <button type="submit" class="btn btn-primary">Create {{.StructName}}</button>
                <button type="button" class="btn close-modal">Cancel</button>
            </div>
        </form>
    </div>
</dialog>

<!-- Edit {{.StructName}} Modal -->
<dialog id="edit-modal" class="modal">
    <div class="modal-box">
        <h3 class="font-bold text-lg">Edit {{.StructName}}</h3>
        <form id="editForm">
            <input type="hidden" id="edit-id" name="id">
            {{range .Fields}}
            <div class="form-control">
                <label class="label" for="edit-{{.JSONName}}">
                    <span class="label-text">{{.Name}}</span>
                </label>
                <input type="{{getInputType .Type}}" id="edit-{{.JSONName}}" name="{{.JSONName}}" class="input input-bordered" required>
            </div>
            {{end}}
            <div class="modal-action">
                <button type="submit" class="btn btn-primary">Update {{.StructName}}</button>
                <button type="button" class="btn close-modal">Cancel</button>
            </div>
        </form>
    </div>
</dialog>

<script>
    (function () {
        const apiKey = 'api';
        const apiUrl = '/api/v1/{{.RouteName}}';

        // Fetch and display {{.PluralName}}
        function fetch{{.PluralName}}() {
            $.ajax({
                url: apiUrl,
                method: 'GET',
                headers: { 'X-Api-Key': apiKey },
                success: function (items) {
                    let tableHtml = '';
                    items.forEach(item => {
                        tableHtml += `
                            <tr>
                                <td>${item.id}</td>
                                {{range .Fields}}
                                <td>${item.{{.JSONName}}}</td>
                                {{end}}
                                <td>${new Date(item.createdAt).toLocaleString()}</td>
                                <td>${new Date(item.updatedAt).toLocaleString()}</td>
                                <td>
                                    <button class="btn btn-sm btn-info edit-{{.RouteName}}" data-id="${item.id}">Edit</button>
                                    <button class="btn btn-sm btn-error delete-{{.RouteName}}" data-id="${item.id}">Delete</button>
                                </td>
                            </tr>
                        `;
                    });
                    $('#{{.RouteName}}-table-body').html(tableHtml);
                },
                error: function (xhr, status, error) {
                    console.error('Error loading {{.PluralName}}:', error);
                    alert('Failed to load {{.PluralName}}. Please try again.');
                }
            });
        }

        // Create {{.StructName}}
        $('#create-{{.RouteName}}-btn').click(() => $('#create-modal')[0].showModal());

        $('#createForm').submit(function (e) {
            e.preventDefault();
            const formData = {};
            {{range .Fields}}
            formData.{{.JSONName}} = $('#create-{{.JSONName}}').val();
            {{end}}

            $.ajax({
                url: apiUrl,
                method: 'POST',
                headers: { 'X-Api-Key': apiKey, 'Content-Type': 'application/json' },
                data: JSON.stringify(formData),
                success: function () {
                    $('#create-modal')[0].close();
                    fetch{{.PluralName}}();
                    this.reset();
                },
                error: function (xhr, status, error) {
                    console.error('Error creating {{.StructName}}:', error);
                    alert('Failed to create {{.StructName}}. Please try again.');
                }
            });
        });

        // Edit {{.StructName}}
        $(document).on('click', '.edit-{{.RouteName}}', function () {
            const itemId = $(this).data('id');
            $.ajax({
                url: `${apiUrl}/${itemId}`,
                method: 'GET',
                headers: { 'X-Api-Key': apiKey },
                success: function (item) {
                    $('#edit-id').val(item.id);
                    {{range .Fields}}
                    $('#edit-{{.JSONName}}').val(item.{{.JSONName}});
                    {{end}}
                    $('#edit-modal')[0].showModal();
                },
                error: function (xhr, status, error) {
                    console.error('Error fetching {{.StructName}} for edit:', error);
                    alert('Failed to load {{.StructName}} for editing. Please try again.');
                }
            });
        });

        $('#editForm').submit(function (e) {
            e.preventDefault();
            const itemId = $('#edit-id').val();
            const formData = {};
            {{range .Fields}}
            formData.{{.JSONName}} = $('#edit-{{.JSONName}}').val();
            {{end}}

            $.ajax({
                url: `${apiUrl}/${itemId}`,
                method: 'PUT',
                headers: { 'X-Api-Key': apiKey, 'Content-Type': 'application/json' },
                data: JSON.stringify(formData),
                success: function () {
                    $('#edit-modal')[0].close();
                    fetch{{.PluralName}}();
                },
                error: function (xhr, status, error) {
                    console.error('Error updating {{.StructName}}:', error);
                    alert('Failed to update {{.StructName}}. Please try again.');
                }
            });
        });

        // Delete {{.StructName}}
        $(document).on('click', '.delete-{{.RouteName}}', function () {
            if (confirm('Are you sure you want to delete this {{.StructName}}?')) {
                const itemId = $(this).data('id');
                $.ajax({
                    url: `${apiUrl}/${itemId}`,
                    method: 'DELETE',
                    headers: { 'X-Api-Key': apiKey },
                    success: function () {
                        fetch{{.PluralName}}();
                    },
                    error: function (xhr, status, error) {
                        console.error('Error deleting {{.StructName}}:', error);
                        alert('Failed to delete {{.StructName}}. Please try again.');
                    }
                });
            }
        });

        // Close modal buttons
        $('.close-modal').click(function () {
            $(this).closest('dialog')[0].close();
        });

        // Initial load of {{.PluralName}}
        fetch{{.PluralName}}();
    })();
</script>
